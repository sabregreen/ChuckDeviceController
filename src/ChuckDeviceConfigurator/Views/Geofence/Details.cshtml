@using ChuckDeviceController.Data.Entities;
@model Geofence
@{
    ViewData["Title"] = "Geofence Details " + Model?.Name;
}

<h1>Geofence Details</h1>

<p>@Html.ValidationMessage("Geofence", new { @class = "text-danger" })</p>

<br />
<nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
        <li class="breadcrumb-item"><a asp-controller="Geofence" asp-action="Index">Geofences</a></li>
        <li class="breadcrumb-item active" aria-current="page">Geofence Details</li>
    </ol>
</nav>

<div>
    <div>
        <div class="float-start">
            <h4>Geofence '@(Model?.Name)'</h4>
        </div>
        <div class="float-end">
            <a asp-action="Edit" asp-route-id="@Model?.Name" class="btn btn-primary">Edit</a>
        </div>
    </div>
    <br />
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Type)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Type)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Data.Area)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Data.Area)
        </dd>
    </dl>
</div>