@using ChuckDeviceController.Data.Entities
@model AssignmentGroup
@{
    ViewData["Title"] = "Delete Assignment Group " + Model.Name;
}

<h1>Delete Assignment Group</h1>

<p>@Html.ValidationMessage("AssignmentGroup", new { @class = "text-danger" })</p>

<br />
<nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
        <li class="breadcrumb-item"><a asp-controller="AssignmentGroup" asp-action="Index">Assignment Groups</a></li>
        <li class="breadcrumb-item active" aria-current="page">Delete Assignment Group</li>
    </ol>
</nav>

<h3>Are you sure you want to delete this assignment group?</h3>
<div>
    <h4>Assignment Group '@Model?.Name'</h4>
    <div>
        <form asp-action="Delete">
            <input type="hidden" asp-for="Name" />
            <input type="submit" value="Yes" class="btn btn-danger" />
            <a asp-action="Index" class="btn btn-secondary">No</a>
        </form>
    </div>
</div>

<hr />
<dl class="row">
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.Name)
    </dt>
    <dd class = "col-sm-10">
        @Html.DisplayFor(model => model.Name)
    </dd>
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.AssignmentIds)
    </dt>
    <dd class = "col-sm-10">
        @string.Join(", ", Model?.AssignmentIds ?? new List<uint>())
    </dd>
</dl>