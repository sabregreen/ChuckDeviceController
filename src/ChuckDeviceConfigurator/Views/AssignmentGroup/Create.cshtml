@using ChuckDeviceController.Data.Entities
@model AssignmentGroup
@{
    ViewData["Title"] = "Create Assignment Group";
}

<h1>Create Assignment Group</h1>

<p>@Html.ValidationMessage("AssignmentGroup", new { @class = "text-danger" })</p>

<br />
<nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
        <li class="breadcrumb-item"><a asp-controller="AssignmentGroup" asp-action="Index">Assignment Groups</a></li>
        <li class="breadcrumb-item active" aria-current="page">Create Assignment Group</li>
    </ol>
</nav>

<h4>Assignment Group</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AssignmentIds" class="control-label"></label>
                <select asp-for="AssignmentIds" class="form-control" asp-items="@(ViewBag.Assignments)">
                </select>
                <span asp-validation-for="AssignmentIds" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}