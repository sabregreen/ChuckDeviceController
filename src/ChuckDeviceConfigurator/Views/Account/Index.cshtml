@using ChuckDeviceController.Data.Entities
@using ChuckDeviceConfigurator.ViewModels;
@model ViewModelsModel<Account>
@{
    ViewData["Title"] = "Accounts";
}

<h1>Accounts</h1>

<p>
    <a asp-action="Add">Import Accounts</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Username)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Level)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].LastEncounter)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Spins)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].GroupName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Username)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Level)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastEncounter)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Spins)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GroupName)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Username">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Username">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Username">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (ViewBag.Page > 0)
{
    <a href="@Url.Action("Index", new { page = ViewBag.Page - 1 })" 
       class="btn btn-default">
        &laquo; Prev
    </a>
}
@if (ViewBag.Page < ViewBag.MaxPage)
{
    <a href="@Url.Action("Index", new { page = ViewBag.Page + 1 })" 
       class="btn btn-default">
        Next &raquo;
    </a>
}
<br />
<label>
    Page: @ViewBag.Page / @ViewBag.MaxPage
</label>