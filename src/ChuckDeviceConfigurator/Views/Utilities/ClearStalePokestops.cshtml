@using ChuckDeviceController.Data.Entities
@model List<Pokestop>
@{
    ViewData["Title"] = "Utilities - Clear Stale Pokestops";
    var pageSize = Context.Request.Query.ContainsKey("pageSize")
        ? Convert.ToInt32(Context.Request.Query["pageSize"])
        : 100;
}

<h1>Utilities</h1>

<p>@Html.ValidationMessage("Utilities", new { @class = "text-danger" })</p>

<h4>Clear Stale Pokestops</h4>

<p>
    Below is a list of Pokestops that have not been seen by any device in the last 24 hours.
</p>

<br />
<nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
        <li class="breadcrumb-item"><a asp-controller="Utilities" asp-action="Index">Utilities</a></li>
        <li class="breadcrumb-item active" aria-current="page">Clear Stale Pokestops</li>
    </ol>
</nav>

<hr />
<div class="row">
    <div class="col">
        <form asp-controller="Utilities" asp-action="ClearStalePokestops">
            <div>
                <div class="float-start">
                    <label>
                        <b>Page:</b> @ViewBag.Page / @ViewBag.MaxPage
                    </label>
                </div>
                <div class="form-group float-end">
                    <input type="submit" value="Delete All" class="btn btn-danger float-end" title="Delete All Stale Pokestops" onclick="return confirm('You are about to delete \'@(Model.Count)\' Pokestops, are you sure this is what you want to do?');" />
                </div>
            </div>
            <table class="table table-striped">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model[0].Id)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model[0].Name)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model[0].UpdatedTime)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model[0].IsEnabled)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model[0].IsDeleted)
                        </th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <th scope="row">
                                <img src="@item.Url" height="48" width="48" />
                                @Html.DisplayFor(modelItem => item.Id)
                            </th>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UpdatedTime)
                            </td>
                            <td>
                                @(item.IsEnabled ? "Yes" : "No")
                            </td>
                            <td>
                                @(item.IsDeleted ? "Yes" : "No")
                            </td>
                            <td>
                                <a class="btn btn-danger btn-sm" asp-action="DeletePokestop" asp-route-id="@item.Id" title="Delete Stale Pokestop" onclick="return confirm('You are about to delete Pokestop \'@(item.Name ?? item.Id)\', are you sure this is what you want to do?');"><i class="fa-solid fa-trash-can"></i></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </form>
        <nav aria-label="...">
            <ul class="pagination">
                <li class="page-item @(ViewBag.Page > 1 ? "" : "disabled")">
                    <a class="page-link" href="@Url.Action("ClearStalePokestops", new { page = ViewBag.Page - 1, pageSize = pageSize })" tabindex="-1">&laquo; Previous</a>
                </li>
                @foreach (var pageNumber in ViewBag.NextPages)
                {
                    <li class="page-item @(pageNumber == ViewBag.Page ? "active" : "")" aria-current="page">
                        <a class="page-link" href="@Url.Action("ClearStalePokestops", new { page = pageNumber, pageSize = pageSize })">@pageNumber</a>
                    </li>
                }
                <li class="page-item @(ViewBag.Page - 1 < ViewBag.MaxPage - 1 ? "" : "disabled")">
                    <a class="page-link" href="@Url.Action("ClearStalePokestops", new { page = ViewBag.Page + 1, pageSize = pageSize })">Next &raquo;</a>
                </li>
            </ul>
        </nav>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}