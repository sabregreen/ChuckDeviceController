@using ChuckDeviceController.Data.Abstractions
@model ManageApiKeyViewModel
@{
    ViewData["Title"] = "Create API Key";
    var groups = Model!.Scopes.Keys.ToList();
}

<h1>Create API Key</h1>

<p>@Html.ValidationMessage("ApiKey", new { @class = "text-danger" })</p>

<br />
@Html.DisplayFor(model => model, "Breadcrumbs", new { Controller = "Plugin", ControllerText = "Api Keys", Fragment = "apikeys", CurrentPage = "Create API Key" })

<h4>API Key</h4>
<hr />

<form asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-floating mb-3">
        <input asp-for="Name" class="form-control" placeholder="API key name description" />
        <label asp-for="Name"></label>
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-floating mb-3">
        <input asp-for="Expiration" class="form-control" type="date" placeholder="API key expiration date" />
        <label asp-for="Expiration"></label> <small class="text-muted"><i>(Leave empty for no expiration)</i></small>
        <span asp-validation-for="Expiration" class="text-danger"></span>
    </div>
    <div class="card">
        <div class="card-header"><b>API Scopes</b></div>
        <div class="card-body">
            <ul class="list-group list-group-flush">
                @for (var i = 0; i < groups.Count; i++)
                {
                    var groupName = groups[i];
                    <li class="list-group-item border-0 py-0">
                        <label class="form-label"><b>@groupName</b></label>
                        <ul class="list-group list-group-flush">
                            @for (var j = 0; j < Model.Scopes[groupName].Count; j++)
                            {
                                <li class="list-group-item border-0 py-0">
                                    <div class="row">
                                        <div class="col-2">
                                            <div class="form-check">
                                                <input type="hidden" asp-for="@Model.Scopes[groupName][j].Value" />
                                                <input asp-for="@Model.Scopes[groupName][j].Selected" class="form-check-input" />
                                                <label class="form-check-label" asp-for="@Model.Scopes[groupName][j].Selected">
                                                    @Model.Scopes[groupName][j].Name
                                                </label>
                                            </div>
                                        </div>
                                        <div class="col-10">
                                            <span class="mb-1 text-muted">@Model.Scopes[groupName][j].Description</span>
                                        </div>
                                    </div>
                                </li>
                            }
                        </ul>
                        <hr>
                    </li>
                }
            </ul>
        </div>
    </div>
    <br />
    <div class="checkbox mb-3">
        <label><input type="checkbox" asp-for="IsEnabled" checked> Enabled</label>
    </div>
    <div class="form-group mb-3">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}