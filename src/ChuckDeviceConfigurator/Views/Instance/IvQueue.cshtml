@using System.Web
@using ChuckDeviceConfigurator.ViewModels
@using ChuckDeviceController.Data.Entities
@model IvQueueViewModel
@{
    ViewData["Title"] = "IV Queue " + Model?.Name;
}

<h1>IV Queue @Model?.Name</h1>

<p>@Html.ValidationMessage("IvQueue", new { @class = "text-danger" })</p>

<div class="checkbox">
    <label><input type="checkbox" asp-for="AutoRefresh" onchange="handleAutoRefresh(this);"> Auto Refresh</label>
</div>

<table class="table table-striped">
    <thead class="table-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Queue[0].Index)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Queue[0].Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Queue[0].PokemonName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Queue[0].PokemonId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Queue[0].EncounterId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Queue[0].Location)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @{
        var index = 1;
        foreach (var item in Model.Queue)
        {
            <tr>
                <th scope="row">
                    @index
                </th>
                <td>
                    @Html.Raw(item.Image)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PokemonName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PokemonId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EncounterId)
                </td>
                <td>
                    @Html.Raw(item.Location)
                </td>
                <td>
                    <a href="@Model.Name/Remove/@item.EncounterId">Remove</a>
                </td>
            </tr>
            index++;
        }
    }
    </tbody>
</table>

@section Scripts {
<script>
const handleAutoRefresh = (e) => {
    const isChecked = $(e).is(':checked');
    if (isChecked) {
        location.href = '@Url.Action("IvQueue", new { name = Model.Name, autoRefresh = true })';
    } else {
        location.href = '@Url.Action("IvQueue", new { name = Model.Name, autoRefresh = false })';
    }
};
</script>
}