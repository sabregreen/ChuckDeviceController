@using ChuckDeviceConfigurator.ViewModels
@using ChuckDeviceController.Data.Entities
@model ViewModelsModel<Instance>
@{
    ViewData["Title"] = "Instances";
}

<h1>Instances</h1>

<p>
    @*<a asp-action="Create">Create New</a>*@
    <button class="btn btn-success btn-sm" asp-action="Create">Create New</button>
</p>

<div class="checkbox">
    <label><input type="checkbox" asp-for="AutoRefresh" onchange="handleAutoRefresh(this);"> Auto Refresh</label>
</div>

<table class="table table-striped">
    <thead class="table-dark">
        <tr>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Items[0].Name)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Items[0].Type)
            </th>
            <th scope="col">
                @*@Html.DisplayNameFor(model => model.Items[0].Status)*@
                Status (Completed/Attempted|Total)
            </th>
            <th scope="col">
                Level
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Items[0].Geofences)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Items[0].DeviceCount)
            </th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <th scope="row">
                    @Html.DisplayFor(modelItem => item.Name)
                </th>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.Raw(item.Status)
                </td>
                <td>
                    @item.MinimumLevel-@item.MaximumLevel
                </td>
                <td>
                    @string.Join(", ", item.Geofences)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeviceCount)
                </td>
                <td>
                    <div class="dropdown">
                        <button class="btn btn-primary btn-sm dropdown-toggle" type="button" id="dropdownGroup" data-bs-toggle="dropdown" aria-expanded="false">
                            Action
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownGroup">
                            <li><a class="dropdown-item" asp-action="Edit" asp-route-id="@item.Name">Edit</a></li>
                            <li><a class="dropdown-item" asp-action="Details" asp-route-id="@item.Name">Details</a></li>
                            <li><a class="dropdown-item" asp-action="Delete" asp-route-id="@item.Name">Delete</a></li>
                        </ul>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
<script>
const handleAutoRefresh = (e) => {
    const isChecked = $(e).is(':checked');
    if (isChecked) {
        location.href = '@Url.Action("Index", new { autoRefresh = true })';
    } else {
        location.href = '@Url.Action("Index", new { autoRefresh = false })';
    }
};
</script>
}