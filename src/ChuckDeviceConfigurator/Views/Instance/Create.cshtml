@using ChuckDeviceController.Data
@using ChuckDeviceController.Data.Entities;
@model Instance
@{
    ViewData["Title"] = "Create Instance";
}

<h1>Create Instance</h1>

<p>@Html.ValidationMessage("Instance", new { @class = "text-danger" })</p>

<h4>Instance</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Type" class="control-label"></label>
                <select asp-for="Type" class="form-control" asp-items="Html.GetEnumSelectList<InstanceType>()">
                    <option value="">Please select one</option>
                </select>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>
            <div class="form-group circles">
                <label asp-for="Data.CircleRouteType" class="control-label"></label>
                <select asp-for="Data.CircleRouteType" class="form-control" asp-items="Html.GetEnumSelectList<CircleInstanceRouteType>()">
                    <option value="">Please select one</option>
                </select>
                <span asp-validation-for="Data.CircleRouteType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col">
                        <label asp-for="MinimumLevel" class="control-label"></label>
                        <input asp-for="MinimumLevel" class="form-control" min="0" max="50" required />
                        <span asp-validation-for="MinimumLevel" class="text-danger"></span>
                    </div>
                    <div class="col">
                        <label asp-for="MaximumLevel" class="control-label"></label>
                        <input asp-for="MaximumLevel" class="form-control" min="0" max="50" required />
                        <span asp-validation-for="MaximumLevel" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Geofences" class="control-label"></label>
                <select asp-for="Geofences" class="form-control" asp-items="@(new SelectList(ViewBag.Geofences, "Name", "Name"))">
                    <option value="">Please select one</option>
                </select>
                <span asp-validation-for="Geofences" class="text-danger"></span>
            </div>
            <div class="form-group pokemon_iv">
                <label asp-for="Data.IvList" class="control-label"></label>
                <select asp-for="Data.IvList" class="form-control" asp-items="@(new SelectList(ViewBag.IvLists, "Name", "Name"))">
                    <option value="">Please select one</option>
                </select>
                <span asp-validation-for="Data.IvList" class="text-danger"></span>
            </div>
            <div class="form-group pokemon_iv">
                <label asp-for="Data.IvQueueLimit" class="control-label"></label>
                <input asp-for="Data.IvQueueLimit" class="form-control" min="1" max="1000" step="1" value="100" />
                <span asp-validation-for="Data.IvQueueLimit" class="text-danger"></span>
            </div>
            <div class="checkbox pokemon_iv">
                <label><input type="checkbox" id="Data.EnableLureEncounters" name="Data.EnableLureEncounters"> Enable Lure Encounters</label>
            </div>
            <div class="form-group bootstrap">
                <label asp-for="Data.CircleSize" class="control-label"></label> (meters i.e: `70, 500, 750, etc`)
                <input asp-for="Data.CircleSize" class="form-control" min="5" max="1000" step="1" />
                <span asp-validation-for="Data.CircleSize" class="text-danger"></span>
            </div>
            <div class="form-group quests">
                <label asp-for="Data.QuestMode" class="control-label"></label>
                <select asp-for="Data.QuestMode" class="form-control" asp-items="Html.GetEnumSelectList<QuestMode>()">
                    <option value="">Please select one</option>
                </select>
                <span asp-validation-for="Data.QuestMode" class="text-danger"></span>
            </div>
            <div class="form-group quests">
                <label asp-for="Data.SpinLimit" class="control-label"></label>
                <input asp-for="Data.SpinLimit" class="form-control" min="1" max="100000" value="10000">
                <span asp-validation-for="Data.SpinLimit" class="text-danger"></span>
            </div>
            <div class="form-group quests">
                <label asp-for="Data.TimeZone" class="control-label"></label>
                <select asp-for="Data.TimeZone" class="form-control" asp-items="@(new SelectList(ViewBag.TimeZones, "Name", "Name"))">
                    <option value="">Please select one</option>
                </select>
                <span asp-validation-for="Data.TimeZone" class="text-danger"></span>
            </div>
            <div class="checkbox quests">
                <label><input type="checkbox" id="Data.EnableDst" name="Data.EnableDst"> Enable Daylight Savings Time</label>
            </div>
            <div class="checkbox quests">
                <label><input type="checkbox" id="Data.UseWarningAccounts" name="Data.UseWarningAccounts"> Use Warning Accounts</label>
            </div>
            <div class="checkbox quests">
                <label><input type="checkbox" id="Data.IgnoreS2CellBootstrap" name="Data.IgnoreS2CellBootstrap"> Ignore S2 Cell Bootstrapping</label>
            </div>
            <div class="checkbox bootstrap">
                <label><input type="checkbox" id="Data.FastBootstrap" name="Data.FastBootstrap"> Enable Fast Bootstrapping</label>
            </div>
            <div class="form-group">
                <label asp-for="Data.AccountGroup" class="control-label"></label>
                <input asp-for="Data.AccountGroup" class="form-control" maxlength="50">
                <span asp-validation-for="Data.AccountGroup" class="text-danger"></span>
            </div>
            <div class="checkbox">
                <label><input type="checkbox" id="Data.IsEvent" name="Data.IsEvent"> Is Unique Event</label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script>
hideElements('bootstrap', false);
hideElements('circles', false);
hideElements('pokemon_iv', false);
hideElements('quests', false);

$('#Type').change(function() {
    hideAllElements(this.value);
});

function hideAllElements(instanceTypeId) {
    const isQuest = instanceTypeId == @((int)InstanceType.AutoQuest);
    const isBootstrap = instanceTypeId == @((int)InstanceType.Bootstrap);
    const isPokemonIV = instanceTypeId == @((int)InstanceType.PokemonIV);
    const isCircle = instanceTypeId == @((int)InstanceType.CirclePokemon) ||
        instanceTypeId == @((int)InstanceType.CircleRaid) ||
        instanceTypeId == @((int)InstanceType.CircleSmartPokemon);
    hideElements('bootstrap', isBootstrap);
    hideElements('pokemon_iv', isPokemonIV);
    hideElements('circles', isCircle);
    hideElements('quests', isQuest);
}

function hideElements(className, show) {
    const elements = document.getElementsByClassName(className);
    for (const element of elements) {
        element.style.display = show ? 'block' : 'none';
    }
}

</script>
}