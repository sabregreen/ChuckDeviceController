@using ChuckDeviceConfigurator.Utilities
@using ChuckDeviceController.Data.Entities
@model Assignment
@{
    ViewData["Title"] = "Assignment Details " + Model?.Id;
}

<h1>Assignment Details</h1>

<p>@Html.ValidationMessage("Assignment", new { @class = "text-danger" })</p>

<br />
<nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
        <li class="breadcrumb-item"><a asp-controller="Assignment" asp-action="Index">Assignments</a></li>
        <li class="breadcrumb-item active" aria-current="page">Assignment Details</li>
    </ol>
</nav>

<div>
    <h4>Assignment '@Model?.Id'</h4>
    <div>
        <a asp-action="Start" asp-route-id="@Model?.Id" class="btn btn-success @(Model?.Enabled ?? false ? "" : "disabled")">
            <i class="fa-solid fa-play"></i>&nbsp;Start
        </a>
        @* TODO: Check if target instance is quest, otherwise remove button *@
        <a asp-action="ReQuest" asp-route-id="@Model?.Id" class="btn btn-warning @(Model?.Enabled ?? false ? "" : "disabled")">
            <i class="fa-solid fa-arrows-rotate"></i>&nbsp;Re-Quest
        </a>
        <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-primary">
            <i class="fa-solid fa-pen-to-square"></i>&nbsp;Edit
        </a>
        <a asp-action="Delete" asp-route-id="@Model?.Id" class="btn btn-danger">
            <i class="fa-solid fa-trash"></i>&nbsp;Delete
        </a>
    </div>
</div>
@if (!(Model?.Enabled ?? false))
{
    <i class="text-muted">Assignments cannot be started or re-quested if disabled.</i>
}

<hr />
<dl class="row">
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.SourceInstanceName)
    </dt>
    <dd class = "col-sm-10">
        @Html.DisplayFor(model => model.SourceInstanceName)
    </dd>
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.InstanceName)
    </dt>
    <dd class = "col-sm-10">
        @Html.DisplayFor(model => model.InstanceName)
    </dd>
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.DeviceUuid)
    </dt>
    <dd class = "col-sm-10">
        @Html.DisplayFor(model => model.DeviceUuid)
    </dd>
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.DeviceGroupName)
    </dt>
    <dd class = "col-sm-10">
        @Html.DisplayFor(model => model.DeviceGroupName)
    </dd>
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.Date)
    </dt>
    <dd class = "col-sm-10">
        @Html.DisplayFor(model => model.Date)
    </dd>
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.Time)
    </dt>
    <dd class = "col-sm-10">
        @Html.DisplayFor(model => model.Time)
    </dd>
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.Enabled)
    </dt>
    <dd class = "col-sm-10">
        @Html.Raw(Utils.FormatEnabled(Model?.Enabled ?? false))
    </dd>
</dl>