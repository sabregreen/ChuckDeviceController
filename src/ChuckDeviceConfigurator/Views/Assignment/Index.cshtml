@using ChuckDeviceConfigurator.Utilities;
@using ChuckDeviceConfigurator.ViewModels
@using ChuckDeviceController.Data.Entities
@model ViewModelsModel<Assignment>
@{
    ViewData["Title"] = "Assignments";
    var pageSize = Context.Request.Query.ContainsKey("pageSize")
        ? Convert.ToInt32(Context.Request.Query["pageSize"])
        : 100;
}

<h1>Assignments</h1>

<div>
    <div class="float-start">
        <label>
            <b>Page:</b> @ViewBag.Page / @ViewBag.MaxPage
        </label>
    </div>
    <div class="form-group float-end">
        <a class="btn btn-success btn-sm" asp-action="Create">Create New</a>
    </div>
</div>

<table class="table table-striped">
    <thead class="table-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].SourceInstanceName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].InstanceName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].DeviceUuid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].DeviceGroupName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Time)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Enabled)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <th scope="row">
                    @Html.DisplayFor(modelItem => item.Id)
                </th>
                <td>
                    @Html.DisplayFor(modelItem => item.SourceInstanceName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InstanceName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeviceUuid)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeviceGroupName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Utils.FormatAssignmentTime(item.Time)
                </td>
                <td>
                    @(item.Enabled ? "Yes" : "No")
                </td>
                <td>
                    <div class="dropdown">
                        <button class="btn btn-primary btn-sm dropdown-toggle" type="button" id="dropdownGroup" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fa-solid fa-bars"></i>
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownGroup">
                            <li><a class="dropdown-item" asp-action="Start" asp-route-id="@item.Id"><i class="fa-solid fa-play"></i>&nbsp;Start</a></li>
                            <li><a class="dropdown-item" asp-action="Edit" asp-route-id="@item.Id"><i class="fa-solid fa-pen-to-square"></i>&nbsp;Edit</a></li>
                            <li><a class="dropdown-item" asp-action="Details" asp-route-id="@item.Id"><i class="fa-solid fa-circle-info"></i>&nbsp;Details</a></li>
                            <li><a class="dropdown-item" asp-action="Delete" asp-route-id="@item.Id"><i class="fa-solid fa-trash-can"></i>&nbsp;Delete</a></li>
                        </ul>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="...">
    <ul class="pagination">
        <li class="page-item @(ViewBag.Page > 1 ? "" : "disabled")">
            <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.Page - 1, pageSize = pageSize })" tabindex="-1">&laquo; Previous</a>
        </li>
        @foreach (var pageNumber in ViewBag.NextPages)
        {
            <li class="page-item @(pageNumber == ViewBag.Page ? "active" : "")" aria-current="page">
                <a class="page-link" href="@Url.Action("Index", new { page = pageNumber, pageSize = pageSize })">@pageNumber</a>
            </li>
        }
        <li class="page-item @(ViewBag.Page - 1 < ViewBag.MaxPage - 1 ? "" : "disabled")">
            <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.Page + 1, pageSize = pageSize })">Next &raquo;</a>
        </li>
    </ul>
</nav>