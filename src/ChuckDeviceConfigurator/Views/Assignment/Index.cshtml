@using ChuckDeviceConfigurator.Utilities;
@using ChuckDeviceConfigurator.ViewModels
@using ChuckDeviceController.Data.Entities
@model ViewModelsModel<Assignment>
@{
    ViewData["Title"] = "Assignments";
}

<h1>Assignments</h1>

<p>
    <div class="form-group">
        <a class="btn btn-success btn-sm" asp-action="Create">Create New</a>
    </div>
</p>

<table id="table-assignments" class="table table-striped table-bordered dt-responsive nowrap">
    <thead class="table-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].SourceInstanceName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].InstanceName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].DeviceUuid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].DeviceGroupName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Time)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Enabled)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <th scope="row">
                    @Html.DisplayFor(modelItem => item.Id)
                </th>
                <td>
                    @Html.DisplayFor(modelItem => item.SourceInstanceName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InstanceName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeviceUuid)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeviceGroupName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Utils.FormatAssignmentTime(item.Time)
                </td>
                <td>
                    @Html.Raw($"<span class=\"{(item.Enabled ? "assignment-enabled" : "assignment-disabled")}\">{(item.Enabled ? "Yes" : "No")}</span>")
                </td>
                <td>
                    <div class="dropdown">
                        <button class="btn btn-primary btn-sm dropdown-toggle" type="button" id="dropdownGroup" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fa-solid fa-bars"></i>
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownGroup">
                            <li><a class="dropdown-item" asp-action="Start" asp-route-id="@item.Id"><i class="fa-solid fa-play"></i>&nbsp;Start</a></li>
                            <li><a class="dropdown-item" asp-action="Edit" asp-route-id="@item.Id"><i class="fa-solid fa-pen-to-square"></i>&nbsp;Edit</a></li>
                            <li><a class="dropdown-item" asp-action="Details" asp-route-id="@item.Id"><i class="fa-solid fa-circle-info"></i>&nbsp;Details</a></li>
                            <li><a class="dropdown-item" asp-action="Delete" asp-route-id="@item.Id"><i class="fa-solid fa-trash-can"></i>&nbsp;Delete</a></li>
                        </ul>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function() {
            $('#table-assignments').DataTable({
                columnDefs: [
                    { orderable: false, targets: 8 },
                ],
                order: [[0, 'asc']],
                stateSave: true,
                searching: true,
                paging: true,
                lengthMenu: [[25, 50, 100, -1], [25, 50, 100, 'All']],
                pagingType: 'full_numbers',
                colReorder: true,
                fixedHeader: {
                    header: true,
                },
                responsive: {
                    //breakpoints: '',
                    details: true,
                },
                info: true,
            });
        });
    </script>
}