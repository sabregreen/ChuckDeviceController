@using ChuckDeviceConfigurator.Utilities
@using ChuckDeviceConfigurator.ViewModels
@model DeviceGroupDetailsViewModel
@{
    ViewData["Title"] = "Device Group Details " + Model?.Name;
}

<h1>Device Group Details</h1>

<p>@Html.ValidationMessage("DeviceGroup", new { @class = "text-danger" })</p>

<br />
<nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
        <li class="breadcrumb-item"><a asp-controller="DeviceGroup" asp-action="Index">Device Groups</a></li>
        <li class="breadcrumb-item active" aria-current="page">Device Group Details</li>
    </ol>
</nav>

<div>
    <h4>Device Group '@Model?.Name'</h4>
    <div>
        <a asp-action="Edit" asp-route-id="@Model?.Name" class="btn btn-primary">
            <i class="fa-solid fa-pen-to-square"></i>&nbsp;Edit
        </a>
        <a asp-action="Delete" asp-route-id="@Model?.Name" class="btn btn-danger">
            <i class="fa-solid fa-trash"></i>&nbsp;Delete
        </a>
    </div>
</div>

<hr />
<dl class="row">
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Name)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Name)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.DeviceUuids)
    </dt>
    <dd class="col-sm-10">
        @if ((ViewBag.Devices?.Count ?? 0) > 0)
        {
            <ul class="list-group">
                @foreach (var device in ViewBag.Devices)
                {
                    var status = Utils.GetDeviceStatus(device.LastSeen);
                    <li class="list-group-item">@Html.Raw($"{status} {device.Uuid}")</li>
                }
            </ul>
        }
        else
        {
            <p>None</p>
        }
    </dd>
</dl>