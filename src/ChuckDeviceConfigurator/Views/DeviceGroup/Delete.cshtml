@using ChuckDeviceController.Data.Entities
@model DeviceGroup
@{
    ViewData["Title"] = "Delete Device Group " + Model.Name;
}

<h1>Delete Device Group</h1>

<p>@Html.ValidationMessage("DeviceGroup", new { @class = "text-danger" })</p>

<br />
<nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
        <li class="breadcrumb-item"><a asp-controller="DeviceGroup" asp-action="Index">Device Groups</a></li>
        <li class="breadcrumb-item active" aria-current="page">Delete Device Group</li>
    </ol>
</nav>

<h3>Are you sure you want to delete this device group?</h3>
<div>
    <div>
        <div class="float-start">
            <h4>Device Group '@(Model?.Name)'</h4>
        </div>
        <div class="float-end">
            <form asp-action="Delete">
                <input type="hidden" asp-for="Name" />
                <input type="submit" value="Delete" class="btn btn-danger" />
            </form>
        </div>
    </div>
    <br />
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DeviceUuids)
        </dt>
        <dd class = "col-sm-10">
            @string.Join(", ", Model?.DeviceUuids ?? new())
        </dd>
    </dl>
    
    <form asp-action="Delete">
        <input type="hidden" asp-for="Name" />
        <input type="submit" value="Delete" class="btn btn-danger" />
    </form>
</div>