@model ManageUserViewModel
@{
    ViewData["Title"] = "Manage User " + Model?.UserName;
    Layout = "~/Views/Shared/_Layout.cshtml";
    Model?.Roles.Sort((a, b) => a.RoleName?.CompareTo(b.RoleName) ?? 0);
}

<h1>Manage User Account</h1>

<p>@Html.ValidationMessage("User", new { @class = "text-danger" })</p>

<br />
@Html.DisplayFor(model => model, "Breadcrumbs", new { Controller = "User", ControllerText = "Users", CurrentPage = "Manage User" })

<form asp-action="Manage" asp-route-userId="@ViewBag.UserId">
    <div class="pb-4">
        <div class="float-start">
            <h4>User Account '@(Model?.UserName)'</h4>
        </div>
        <div class="float-end">
            <a asp-action="Delete" asp-route-id="@ViewBag.UserId" class="btn btn-danger">
                <i class="fa-solid fa-trash"></i>&nbsp;Delete
            </a>
            &nbsp;
            <button type="submit" class="btn btn-primary">
                <i class="fa-solid fa-floppy-disk"></i>&nbsp;Save
            </button>
        </div>
    </div>
    <hr />
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row">
        <div class="col-sm col-lg-6">
            <div class="form-floating mb-3">
                <input asp-for="UserName" class="form-control" maxlength="255" placeholder="User account name" />
                <label asp-for="UserName"></label>
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
        </div>
        <div class="col-sm col-lg-6">
            <div class="form-floating mb-3">
                <input asp-for="Email" class="form-control" maxlength="255" placeholder="User account email address" />
                <label asp-for="Email"></label>
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm col-lg-6">
            <div class="form-floating mb-3">
                <input asp-for="Password" type="password" class="form-control" placeholder="User account password" />
                <label asp-for="Password"></label>
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
        </div>
        <div class="col-sm col-lg-6">
            <div class="form-floating mb-3">
                <input asp-for="ConfirmPassword" type="password" class="form-control" placeholder=Confirmed user account password"" />
                <label asp-for="ConfirmPassword"></label>
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-header"><b>User Permissions</b></div>
        <div class="card-body">
            @for (var i = 0; i < Model?.Roles.Count; i++)
            {
                <div class="form-check">
                    <input type="hidden" asp-for="@Model.Roles[i].RoleId" />
                    <input type="hidden" asp-for="@Model.Roles[i].RoleName" />
                    @if (Model.UserName == Strings.DefaultUserName && Model.Roles[i].RoleName == Strings.DefaultRootRoleName)
                    {
                        <input asp-for="@Model.Roles[i].Selected" class="form-check-input" checked disabled />
                    }
                    else
                    {
                        <input asp-for="@Model.Roles[i].Selected" class="form-check-input" />
                    }
                    <label class="form-check-label" asp-for="@Model.Roles[i].Selected">
                        @Model.Roles[i].RoleName
                    </label>
                </div>
            }
        </div>
    </div>
    <br />
    <div class="form-group">
        <input type="submit" value="Update" class="btn btn-primary" style="width:auto" />
        <a asp-action="Index" class="btn btn-secondary" style="width:auto">Cancel</a>
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}